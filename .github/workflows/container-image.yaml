name: Container Images

on:
  push:

jobs:
  buildx:
    # this is to prevent the job to run at forked projects
    env:
      IMAGE: aws-ebs-csi-driver
      DEB_BUILD_TAG: aws-ebs-csi-driver:debian
      AL2_BUILD_TAG: aws-ebs-csi-driver:amazonlinux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Build debian target
        run: |
          docker buildx build \
            -t $DEB_BUILD_TAG \
            --platform=linux/arm64,linux/amd64 \
            --output="type=image,push=false" . \
            --target=debian-base
      # - name: Build amazonlinux target
      #   run: |
      #     docker buildx build \
      #       -t $AL2_BUILD_TAG \
      #       --platform=linux/arm64,linux/amd64 \
      #       --output="type=image,push=false" . \
      #       --target=amazonlinux
      - name: Set environment variables
        run: |
          BRANCH=$(echo $GITHUB_REF | cut -d'/' -f3)
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          if [ "$BRANCH" = "master" ]; then
            TAG="latest"
          else
            TAG=$BRANCH
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GH_ACTIONS_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GH_ACTIONS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: GitHubActions
          aws-region: us-east-1
      - name: log-in to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 204717343847.dkr.ecr.us-east-1.amazonaws.com
      - name: Push debian target to Docker Hub
        run: |
          DEB_PUSH_TAG="204717343847.dkr.ecr.us-east-1.amazonaws.com/infura-dedicated/$IMAGE:$TAG"
          docker buildx build \
            -t $DEB_PUSH_TAG \
            --platform=linux/arm64,linux/amd64 \
            --output="type=image,push=true" . \
            --target=debian-base
